displayName: Open WebUI
description: Open WebUI is an extensible, self-hosted AI interface that adapts to your workflow, all while operating entirely offline.
category:
  - AI
type: catalog
allowMultipleInstances: false
scope:
  - workspace
licensing:
  - Ultimate
  - Enterprise
certifications:
overview: |-
  # Open WebUI

  ## Product Overview
  Open WebUI is an open-source chat interface for AI models and APIs, offering a user-friendly alternative to ChatGPT-style interfaces. It's designed to be extensible, performant, and easy to self-host, making it an excellent choice for both individual users and organizations looking to deploy their own AI chat solutions.

  ## Key Features

  ### Model Support & Integration
  - Supports multiple AI models and providers including OpenAI, Anthropic, Local LLMs
  - Easy integration with various AI model APIs
  - Flexible model switching within the same interface
  - Support for both cloud-hosted and local model deployments

  ### Advanced Chat Capabilities
  - Real-time streaming responses
  - Code highlighting and rendering
  - Markdown support with preview
  - File upload and processing capabilities
  - Context window management
  - Conversation history tracking
  - Multiple concurrent chat sessions

  ### Developer-Friendly
  - Docker support for easy deployment
  - API-first architecture
  - Extensible plugin system
  - Custom prompt templates
  - WebSocket support for real-time communications
  - Environment variable configuration

  ### Security & Privacy
  - Role-based access control
  - User authentication system
  - API key management
  - Self-hosting capabilities for data privacy
  - Secure websocket connections
  - Rate limiting support

  ### User Experience
  - Clean, intuitive interface
  - Dark/light theme support
  - Mobile-responsive design
  - Keyboard shortcuts
  - Conversation export/import
  - Custom chat parameters adjustment
  - Message search functionality

  ### Performance
  - Optimized response streaming
  - Efficient memory management
  - Fast cold start times
  - Low resource requirements
  - Caching system for improved response times

  ## Technical Architecture
  Built with modern web technologies:
  - Backend: Go for high performance and reliability
  - Frontend: React for responsive UI
  - Database: SQLite/PostgreSQL for data persistence
  - WebSocket for real-time communication
  - Docker for containerization and easy deployment

icon: 

